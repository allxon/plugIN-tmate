# Makefile example. Compile all .c files and build execution file
TOOLCHAIN=${HOME}/dev/arm_linux_4.8/usr
QUIET = @
ECHO  = echo
RM = rm -rf
CC := ${TOOLCHAIN}/bin/arm-linux-g++
CINC = -I. -I./include -I$(TOOLCHAIN)/include -I$(PWD)/../websocket -I$(PWD)/../argon2/include

GCC_GXX_WARNINGS = -Wall -Wno-error -Wno-packed -Wpointer-arith -Wredundant-decls -Wstrict-aliasing=3 -Wswitch-enum -Wundef -Wwrite-strings -Wextra -Wno-unused-parameter \

CFLAGS  = -Os
LDFLAGS = -lm
OBJS  = $(patsubst %.cpp,%.o,$(wildcard $(PWD)/src/*.cpp))

all: default

nuvoton: osbuild_nuvoton default
osbuild_nuvoton:
	$(eval OS_BUILD = _UBUNTU_BUILD_)
	$(eval PLATFORM = _ARM_PLATFORM_)

default: $(OBJS)
	@echo "###### Compile $(OBJS) done!! ######"

%.o: %.cpp
	$(QUIET)$(ECHO) "Compliling " $<
ifeq ($(TOOLCHAIN),)
	@echo "$(QUIET)$(CC) $(CFLAGS) -DLINUX $(GCC_GXX_WARNINGS) -c -O2 $(CINC) $< -o $@"
	$(QUIET)$(CC) $(CFLAGS) -DLINUX $(GCC_GXX_WARNINGS) -c -O2 $(CINC) $< -o $@
else
	@echo "$(QUIET)$(CC) $(CFLAGS) -D$(OS_BUILD) -D$(PLATFORM) -DLINUX $(GCC_GXX_WARNINGS) -c -O2 $(CINC) $< -o $@"
	$(QUIET)$(CC) $(CFLAGS) -D$(OS_BUILD) -D$(PLATFORM) -DLINUX $(GCC_GXX_WARNINGS) -c -O2 $(CINC) $< -o $@
endif

clean:
	$(QUIET)$(RM) $(OBJS)


