# Makefile example. Compile all .c files and build execution file
QUIET = @
ECHO  = echo
RM = rm -rf

CC := g++
CINC = -I.
GCC_GXX_WARNINGS = -Wall -Wno-error -Wno-packed -Wpointer-arith -Wredundant-decls -Wstrict-aliasing=3 -Wswitch-enum -Wundef -Wwrite-strings -Wextra -Wno-unused-parameter \

CFLAGS  = -Os
LDFLAGS = -lm
OBJS  = $(patsubst %.cpp,%.o,$(wildcard $(PWD)/*.cpp))

all: default

jetson: osbuild_jetson default
osbuild_jetson:
	$(eval OS_BUILD = _UBUNTU_BUILD_)
	$(eval PLATFORM = _ARM_PLATFORM_)

x86: osbuild_x86 default
osbuild_x86:
	$(eval OS_BUILD = _UBUNTU_BUILD_)
	$(eval PLATFORM = _X86_PLATFORM_)

default: $(OBJS)
	@echo "###### Compile $(OBJS) done!! ######"

%.o: %.cpp
	$(QUIET)$(ECHO) "Compliling " $<

	@echo "$(QUIET)$(CC) $(CFLAGS) -D$(OS_BUILD) -DLINUX -D$(PLATFORM) $(GCC_GXX_WARNINGS) -c -O2 $(CINC) $< -o $@"
	$(QUIET)$(CC) $(CFLAGS) -D$(OS_BUILD) -DLINUX -D$(PLATFORM) $(GCC_GXX_WARNINGS) -c -O2 $(CINC) $< -o $@

clean:
	$(QUIET)$(RM) $(OBJS)
